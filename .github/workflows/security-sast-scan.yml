name: Security SAST scan (Detect vulnerabilities)

on:
  pull_request:
    branches:
      - master
      - develop
      - preprod

jobs:
  semgrep:
    runs-on: self-hosted
    permissions:
      id-token: write
      contents: read
      security-events: write
      actions: read

    steps:

      - name: üß™ List files 1
        run: Get-ChildItem -Force -Recurse

      - name: üì• Checkout du code
        uses: actions/checkout@v4

      - name: üêç Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: üì¶ Install semgrep and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install semgrep
          semgrep --version
      
      - name: üß™ List files 2
        run: Get-ChildItem -Force -Recurse

      - name: üöÄ Ex√©cution de Semgrep et g√©n√©ration du rapport SARIF
        run: |
          semgrep --config auto --sarif --output semgrep-report.sarif .
          jq '.runs[0].results | length' semgrep-report.sarif > vuln_count.txt
          VULN_COUNT=$(cat vuln_count.txt)
          echo "Nombre de vuln√©rabilit√©s d√©tect√©es : $VULN_COUNT"
          echo "VULN_COUNT=$VULN_COUNT" >> $GITHUB_ENV

      - name: üß™ List files 3
        run: Get-ChildItem -Force -Recurse

      - name: ‚¨ÜÔ∏è Upload Semgrep file as SARIF to GitHub Advanced Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep-report.sarif
          category: semgrep-sast-analysis

      - name: ‚úÖ V√©rification du r√©sultat de l‚Äôanalyse
        run: |
          if [ "${VULN_COUNT}" -gt 0 ]; then
            echo "‚ùå ${VULN_COUNT} vuln√©rabilit√©s d√©tect√©es. CI bloqu√©e."
            exit 1
          else
            echo "‚úÖ Aucune vuln√©rabilit√© d√©tect√©e. CI valid√©e."
          fi